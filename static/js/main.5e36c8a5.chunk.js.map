{"version":3,"sources":["components/PointAddForm/index.js","components/PointAddForm/PoinAddForm.js","components/PointsListItem/PointsListItem.js","components/PointsListItem/index.js","components/PointsList/index.js","components/PointsList/PointsList.js","components/MapBlock/index.js","components/MapBlock/MapBlock.js","components/App/index.js","components/App/App.js","index.js"],"names":["PointAddForm","state","name","onInputChange","e","_this","setState","target","value","onSubmit","preventDefault","props","onPointAdded","alert","this","react_default","a","createElement","className","type","id","placeholder","onChange","Component","library","add","faTrash","PointsListItem","_ref","onDeleted","onClick","react_fontawesome_index_es","icon","size","color","PointsList","pointsList","points","map","_ref2","index","react_beautiful_dnd_esm","key","draggableId","String","provided","Object","assign","draggableProps","dragHandleProps","ref","innerRef","components_PointsListItem","MapBlock","center","zoom","controls","onBoundsChange","getCenter","mapCenter","_this2","_this$props","onPlacemarkDragend","onYmapsLoad","placemarks","coord","react_yandex_maps_umd_production_min","geometry","properties","balloonContent","options","draggable","onDragend","dragCoord","get","getCoordinates","polylineCoords","query","load","apikey","instanceRef","onLoad","ymaps","width","height","balloonCloseButton","strokeColor","strokeWidth","strokeOpacity","App","reorder","list","startIndex","endIndex","result","Array","from","_result$splice","splice","removed","slicedToArray","onDragEnd","bind","assertThisInitialized","setYmaps","setMapCenter","addPoint","some","item","push","deletePoint","filter","movePoint","_ref3","idx","findIndex","oldItem","newItem","objectSpread","concat","toConsumableArray","slice","destination","source","components_PointAddForm","droppableId","droppableProps","components_PointsList","components_MapBlock","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.5e36c8a5.chunk.js","sourcesContent":["import PointAddForm from './PoinAddForm';\r\nexport default PointAddForm;","import React, { Component } from 'react';\r\n\r\nimport './PointAddForm.scss';\r\n\r\nexport default class PointAddForm extends Component {\r\n\r\n  state = {\r\n    name: ''\r\n  }\r\n\r\n  onInputChange = (e) => {\r\n    this.setState({\r\n      name: e.target.value\r\n    });\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name } = this.state;\r\n    if (!name) {\r\n      alert('Please, enter an address');\r\n      return;\r\n    }\r\n    this.props.onPointAdded(name);\r\n    this.setState({\r\n      name: ''\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name } = this.state;\r\n    return (\r\n      <form className=\"point-add-form\" onSubmit={this.onSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          id=\"suggest\"\r\n          placeholder=\"add new point\"\r\n          onChange={this.onInputChange}\r\n          value={name}\r\n        />\r\n      </form>\r\n     );\r\n  }\r\n}","import React from 'react';\r\n\r\nimport './PointsListItem.scss';\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\r\n\r\nlibrary.add(faTrash);\r\n\r\nconst PointsListItem = ({ name, onDeleted }) => {\r\n  return (\r\n    <li className=\"points-list-item\">\r\n      <h4>{name}</h4>\r\n      <button\r\n        className=\"btn btn-delete\"\r\n        onClick={onDeleted}\r\n      >\r\n        <FontAwesomeIcon\r\n          className=\"icon\"\r\n          icon=\"trash\"\r\n          size=\"2x\"\r\n          color=\"#940000\"\r\n        />\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default PointsListItem;","import PointsListItem from './PointsListItem';\r\nexport default PointsListItem;","import PointsList from './PointsList';\r\nexport default PointsList;","import React from 'react';\r\n\r\nimport './PointsList.scss';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nimport PointsListItem from '../PointsListItem';\r\n\r\nconst PointsList = ({pointsList, onDeleted}) => {\r\n  const points = pointsList.map(({id, name}, index) => {\r\n    return (\r\n      <Draggable key={id} draggableId={String(id)} index={index} >\r\n\r\n        {provided => (\r\n          <div\r\n            {...provided.draggableProps}\r\n            {...provided.dragHandleProps}\r\n            ref={provided.innerRef}\r\n          >\r\n            <PointsListItem\r\n              key={id}\r\n              name={name}\r\n              onDeleted={() => onDeleted(id)}\r\n            />\r\n          </div>\r\n        )}\r\n      </Draggable>\r\n\r\n    );\r\n  });\r\n  return (\r\n    <ul className=\"point-list\">\r\n      {points}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default PointsList;","import MapBlock from './MapBlock';\r\nexport default MapBlock;","import React, { Component } from 'react';\r\n\r\nimport './MapBlock.scss';\r\nimport { YMaps, Map, Placemark, Polyline } from 'react-yandex-maps';\r\n\r\nexport default class MapBlock extends Component {\r\n  map = null;\r\n\r\n  state = {\r\n    center: [55.76, 37.64],\r\n    zoom: 10,\r\n    controls: []\r\n  }\r\n\r\n  onBoundsChange = () => {\r\n    const center = this.map.getCenter();\r\n    this.props.mapCenter(center);\r\n    this.setState({center});\r\n  };\r\n\r\n  render() {\r\n    const { pointsList, onPlacemarkDragend, onYmapsLoad } = this.props;\r\n\r\n    const placemarks = pointsList.map(({id, name, coord}) => {\r\n      return (\r\n        <Placemark\r\n          key={id}\r\n          geometry={coord}\r\n          properties={{\r\n            balloonContent: name\r\n          }}\r\n          options={{\r\n            draggable: true\r\n          }}\r\n          onDragend={(e) => {\r\n            const dragCoord = e.get('target').geometry.getCoordinates();\r\n            onPlacemarkDragend(id, dragCoord);\r\n          }}\r\n        />\r\n      );\r\n    });\r\n\r\n    const polylineCoords = pointsList.map(({coord}) => coord);\r\n    return (\r\n      <div className=\"map-block\">\r\n        <YMaps\r\n          query={{\r\n            load: \"package.full\",\r\n            apikey: '2e897e10-0e8f-4974-841d-93edb806dc0d'\r\n          }}\r\n        >\r\n          <Map\r\n            state={this.state}\r\n            instanceRef={map => this.map = map}\r\n            onLoad={(ymaps) => onYmapsLoad(ymaps)}\r\n            width=\"100%\"\r\n            height=\"600px\"\r\n            onBoundsChange={this.onBoundsChange}\r\n          >\r\n            { placemarks }\r\n\r\n            <Polyline\r\n              geometry={polylineCoords}\r\n              options={{\r\n                balloonCloseButton: false,\r\n                strokeColor: '#330033',\r\n                strokeWidth: 4,\r\n                strokeOpacity: 0.5,\r\n              }}\r\n            />\r\n          </Map>\r\n        </YMaps>\r\n      </div>\r\n    );\r\n  }\r\n}","import App from './App';\r\nexport default App;","import React, { Component } from 'react';\r\nimport { DragDropContext, Droppable} from 'react-beautiful-dnd';\r\n\r\nimport '../../fonts/roboto.css';\r\nimport './App.scss';\r\n\r\nimport PointAddForm from '../PointAddForm';\r\nimport PointsList from '../PointsList';\r\nimport MapBlock from '../MapBlock';\r\n\r\nexport default class App extends Component {\r\n\r\n  id = 0;\r\n\r\n  state = {\r\n    ymaps: null,\r\n    mapCenter: [55.76, 37.64],\r\n    pointsList: []\r\n  };\r\n\r\n  // Вспомогательная функция для dnd\r\n  reorder = (list, startIndex, endIndex) => {\r\n    const result = Array.from(list);\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed);\r\n\r\n    return result;\r\n  };\r\n\r\n  onDragEnd = this.onDragEnd.bind(this);\r\n\r\n  onDragEnd(result) {\r\n    // dropped outside the list\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n\r\n    const pointsList = this.reorder(\r\n      this.state.pointsList,\r\n      result.source.index,\r\n      result.destination.index\r\n    );\r\n\r\n    this.setState({\r\n      pointsList\r\n    });\r\n  }\r\n\r\n  setYmaps = (ymaps) => {\r\n    this.setState({ymaps});\r\n  }\r\n  setMapCenter = (mapCenter) => {\r\n    this.setState({mapCenter});\r\n  }\r\n\r\n  addPoint = (name) => {\r\n    this.setState(({pointsList, mapCenter}) => {\r\n      //Проверка на повтор адреса\r\n      const isDuplicate = pointsList.some(item => item.name === name);\r\n      if (isDuplicate) {\r\n        alert('point with this name is already in list');\r\n        return;\r\n      }\r\n\r\n      pointsList.push({ id: this.id++, name, coord: mapCenter });\r\n      return ({\r\n        pointsList: pointsList\r\n      });\r\n    });\r\n  }\r\n\r\n  deletePoint = (id) => {\r\n    this.setState(({pointsList}) => {\r\n      return {\r\n        pointsList: pointsList.filter(item => item.id !== id)\r\n      }\r\n    });\r\n  }\r\n\r\n  movePoint = (id, coord) => {\r\n    this.setState(({pointsList}) => {\r\n      const idx     = pointsList.findIndex(item => item.id === id),\r\n            oldItem = pointsList[idx],\r\n            newItem = { ...oldItem, coord},\r\n            newArr  = [\r\n              ...pointsList.slice(0, idx),\r\n              newItem,\r\n              ...pointsList.slice(idx + 1)\r\n            ];\r\n\r\n      return {\r\n        pointsList: newArr\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { pointsList } = this.state;\r\n\r\n    return (\r\n      <div className=\"app\">\r\n        <div className=\"point-form\">\r\n          <PointAddForm onPointAdded={(name) => this.addPoint(name)} />\r\n\r\n          <DragDropContext onDragEnd={this.onDragEnd}>\r\n            <Droppable droppableId=\"droppable\">\r\n              {(provided) => (\r\n                <div\r\n                  ref={provided.innerRef}\r\n                  {...provided.droppableProps}\r\n                >\r\n                  <PointsList\r\n                    pointsList={pointsList}\r\n                    onDeleted={this.deletePoint}\r\n                  />\r\n\r\n                  {provided.placeholder}\r\n                </div>\r\n              )}\r\n\r\n            </Droppable>\r\n          </DragDropContext>\r\n        </div>\r\n\r\n        <MapBlock\r\n          pointsList={pointsList}\r\n          onYmapsLoad={this.setYmaps}\r\n          mapCenter={this.setMapCenter}\r\n          onPlacemarkDragend={this.movePoint}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}